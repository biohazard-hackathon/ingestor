parameters:
  config.path: config/config.yml

services:
  configurator:
    class: 'components/Configurator'
    arguments:
      - '%config.path%'
    calls:
      - method: selectAndApplyEnvParams

  version:
    class: 'components/Version'

  router:
    class: 'components/Router'
    arguments:
      - "!tagged controller"

  # Factories
  logger:
    factory:
      class: 'factories/LoggerFactory'
      method: createInstance
    arguments:
      - '@configurator'
      - '@version'

  s3Connection:
    factory:
      class: 'factories/S3ConnectionFactory'
      method: createInstance
    arguments:
      - '@configurator'

  eventBridgeConnection:
    factory:
      class: 'factories/EventBridgeConnectionFactory'
      method: createInstance
    arguments:
      - '@configurator'

  dynamoDbConnection:
    factory:
      class: 'factories/DynamoDbConnectionFactory'
      method: createInstance
    arguments:
      - '@configurator'

  # Models
  s3Model:
    class: 'models/S3Model'
    arguments:
      - '@s3Connection'

  eventBridgeModel:
    class: 'models/EventBridgeModel'
    arguments:
      - '@eventBridgeConnection'

  dynamoDbModel:
    class: 'models/DynamoDbModel'
    arguments:
      - '@dynamoDbConnection'

  # Controllers
  healthCheckController:
    class: 'controllers/HealthCheckController'
    arguments:
      - '@version'
      - '@logger'
    tags:
      - name: controller

  # Controllers
  sheetIngestionController:
    class: 'controllers/SheetIngestionController'
    arguments:
      - '@logger'
      - '@s3Model'
      - '@eventBridgeModel'
      - '@dynamoDbModel'
      - '@configurator'
    tags:
      - name: controller
